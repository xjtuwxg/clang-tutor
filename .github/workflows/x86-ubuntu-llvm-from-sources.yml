name: x86-Ubuntu-llvm-from-sources

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Download Ninja
        shell: cmake -P {0}
        run: |
          # The following steps are implemented using CMake commands
          set(ninja_version "1.9.0")
          set(ninja_suffix "linux.zip")
          set(ninja_url "https://github.com/ninja-build/ninja/releases/download/v${ninja_version}/ninja-${ninja_suffix}")
          file(DOWNLOAD "${ninja_url}" ./ninja.zip SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ninja.zip)

          if (NOT "${{ runner.os }}" STREQUAL "Windows")
            execute_process(
            COMMAND chmod +x ninja
            )
          endif()
      - name: Add Ninja to $PATH
        run: |
          echo "${GITHUB_WORKSPACE}" >> $GITHUB_PATH
      - name: Clone llvm-project
        run: |
          git clone --depth 1 --single-branch --branch release/12.x https://github.com/llvm/llvm-project
      - name: Make ld.gold the default linker
        run: |
          # This a quick and easy hack. Not something I would use on my
          # production machine.
          sudo rm /usr/bin/ld
          sudo ln -s /usr/bin/x86_64-linux-gnu-ld.gold /usr/bin/ld
      - name: Build LLVM & Clang
        run: |
          cd llvm-project
          git checkout release/12.x
          mkdir build && cd build
          cmake -G Ninja -D CMAKE_MAKE_PROGRAM=$GITHUB_WORKSPACE/ninja \
            -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang;libcxx;libcxxabi" \
            -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_OPTIMIZED_TABLEGEN=ON \
            ../llvm
          ninja
      - name: Install lit
        run: |
          sudo pip3 install lit
      - name: Build HelloWorld
        run: |
          cd HelloWorld
          mkdir build && cd build
          cmake -DCT_LLVM_INSTALL_DIR="$GITHUB_WORKSPACE/llvm-project/build" ../
          make -j2
      - name: Build llvm-tutor + run tests
        run: |
          mkdir build && cd build
          cmake -DCT_LLVM_INSTALL_DIR="$GITHUB_WORKSPACE/llvm-project/build" ../
          make -j2
          lit test/
